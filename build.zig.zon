.{
    .name = "foxwhale",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        // See `zig fetch --save <url>` for a command-line interface for adding dependencies.
        .foxwhale_gen = .{
            // When updating this field to a new URL, be sure to delete the corresponding
            // `hash`, otherwise you are communicating that you expect to find the old hash at
            // the new URL.
            .url = "https://github.com/malcolmstill/foxwhale-gen/archive/21c0f17c7d2258fcdf0819866d4cf4c784f00213.tar.gz",

            // This is computed from the file contents of the directory of files that is
            // obtained after fetching `url` and applying the inclusion rules given by
            // `paths`.
            //
            // This field is the source of truth; packages do not come from a `url`; they
            // come from a `hash`. `url` is just one of many possible mirrors for how to
            // obtain a package matching this `hash`.
            //
            // Uses the [multihash](https://multiformats.io/multihash/) format.
            .hash = "122006b5217a03a29dab5ffc6040814e9cf3da85de6553177d72cd00a7d61584634b",

            // When this is provided, the package is found in a directory relative to the
            // build root. In this case the package's hash is irrelevant and therefore not
            // computed. This field and `url` are mutually exclusive.
            // .path = "foo",
        },
        .foxwhale_epoll = .{ .path = "foxwhale-epoll" },
        .foxwhale_pool = .{ .path = "foxwhale-pool" },
        .foxwhale_subset_pool = .{ .path = "foxwhale-subset-pool" },
        .foxwhale_iterable_pool = .{ .path = "foxwhale-iterable-pool" },
        .foxwhale_wayland = .{ .path = "foxwhale-wayland" },
        .foxwhale_backend = .{ .path = "foxwhale-backend" },
    },

    // Specifies the set of files and directories that are included in this package.
    // Only files and directories listed here are included in the `hash` that
    // is computed for this package.
    // Paths are relative to the build root. Use the empty string (`""`) to refer to
    // the build root itself.
    // A directory listed here means that all files within, recursively, are included.
    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.
        "",
        // For example...
        //"build.zig",
        //"build.zig.zon",
        //"src",
        //"LICENSE",
        //"README.md",
    },
}
