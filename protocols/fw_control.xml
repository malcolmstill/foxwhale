<?xml version="1.0" encoding="UTF-8"?>
<protocol name="fw_control">

  <copyright>
    Copyright Â© 2020, Malcolm Still.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice (including the next
    paragraph) shall be included in all copies or substantial portions of the
    Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
  </copyright>

  <interface name="fw_control" version="1">
    <description summary="protocol for querying and controlling foxwhale">
      fw_control defines an interface for a a client to query and control
      foxwhale. It is intended to used primarily by foxwhalectl but there 
      is no reason that arbitrary clients can't implement some or all of
      the protocol for whatever suits their needs.
    </description>

    <request name="get_clients">
      <description summary="gets_clients gets current list of clients">
        Gets metadata about all the clients currently connected to foxwhale.
      </description>
    </request>

    <request name="get_windows">
      <description summary="get_windows gets current list of windows">
        Gets metadata about all the windows currently connected to foxwhale.
      </description>
    </request>

    <request name="get_window_trees">
      <description summary="get_windows gets current list of windows">
        Gets metadata about all the windows currently connected to foxwhale.
      </description>
    </request>

    <request name="destroy" type="destructor">
      <description summary="delete this object, used or not">
        Cleans up fw_control object.
      </description>
    </request>

    <event name="client">
      <arg name="index" type="uint" summary="client index"/>
    </event>

    <enum name="surface_type">
      <entry name="wl_surface" value="0" summary=""/>
      <entry name="wl_subsurface" value="1" summary=""/>
      <entry name="xdg_toplevel" value="2" summary=""/>
      <entry name="xdg_popup" value="3" summary=""/>
    </enum>

    <event name="window">
      <arg name="index" type="uint" summary="window index"/>
      <arg name="parent" type="int" summary="window index of parent" allow-nullable="true"/>
      <arg name="wl_surface_id" type="uint" summary="window wl_surface_id"/>
      <arg name="surface_type" type="uint" summary="window surface type"/>
      <arg name="x" type="int" summary="window x"/>
      <arg name="y" type="int" summary="window y"/>
      <arg name="width" type="int" summary="window width"/>
      <arg name="height" type="int" summary="window height"/>
      <arg name="input_region_id" type="uint" summary="input region id" allow-null="true"/>
    </event>

    <event name="toplevel_window">
      <arg name="index" type="uint" summary="window index"/>
      <arg name="parent" type="int" summary="window index of parent" allow-nullable="true"/>
      <arg name="wl_surface_id" type="uint" summary="window wl_surface_id"/>
      <arg name="surface_type" type="uint" summary="window surface type"/>
      <arg name="x" type="int" summary="window x"/>
      <arg name="y" type="int" summary="window y"/>
      <arg name="width" type="int" summary="window width"/>
      <arg name="height" type="int" summary="window height"/>
      <arg name="input_region_id" type="uint" summary="input region id" allow-null="true"/>
    </event>

    <event name="region_rect">
      <arg name="index" type="uint" summary="region index"/>
      <arg name="x" type="int" summary="rect x"/>
      <arg name="y" type="int" summary="rect y"/>
      <arg name="width" type="int" summary="rect width"/>
      <arg name="height" type="int" summary="rect height"/>
      <arg name="op" type="int" summary="rect height"/>
    </event>

    <event name="done">

    </event>

  </interface>

</protocol>
